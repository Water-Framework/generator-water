package <%-servicePackage%>;

import <%-apiPackage%>.*;
<%if(hasModel){-%>
import <%-modelPackage%>.*;
<% } -%>
import it.water.core.api.permission.SecurityContext;
import it.water.core.api.registry.ComponentRegistry;
<% if(applicationTypeEntity) { -%>
import it.water.repository.service.BaseEntityServiceImpl;
<% } else {-%>
import it.water.core.service.BaseServiceImpl;
<% } -%>

import lombok.*;

import org.osgi.service.cdi.annotations.Bean;
import org.osgi.service.cdi.annotations.Reference;
import org.osgi.service.cdi.annotations.Service;
import org.osgi.service.cdi.annotations.SingleComponent;

import javax.inject.Inject;

<% 
let extendsStr = (applicationTypeEntity)?"BaseEntityServiceImpl<"+modelName+">":"BaseServiceImpl";
-%>

/**
 * @Generated by Water Generator
 * Service Api Class for <%- modelName %> entity.
 *
 */
@SingleComponent
@Bean
@Service(value = <%- modelName %>Api.class)
public class <%- modelName %>ServiceImpl extends <%-extendsStr%> implements <%- modelName %>Api {

    @Getter
    @Setter
    @Reference
    @Inject
    private <%- modelName %>SystemApi systemService;

    @Getter
    @Setter
    @Reference
    @Inject
    private ComponentRegistry componentRegistry;

    public <%- modelName %>ServiceImpl() {
<% if(applicationTypeEntity) { -%>        
        super(<%- modelName %>.class);
<% } -%>
    }

    //todo: add custom logic here...
    //use getLog to retrieve Logger instance automatically instantiated for this class
}
